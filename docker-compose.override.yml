version: '3.4'

services:
  nodus.api:
    container_name: nodus.api
    env_file: docker.env
    ports:
      - "3000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  nodus.jamal.service:
    container_name: nodus.jamal.service
    env_file: docker.env
    ports:
      - "3001:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  nodus.auth:
    container_name: nodus.auth
    env_file: docker.env
    ports:
      - "3002:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  nodus.sqlserver:
    container_name: nodus.sqlserver
    environment:
        SA_PASSWORD: "Qwerty1!"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"

  nodus.database.migrations.webapi:
    container_name: nodus.database.migrations.webapi
    env_file: docker.env
    ports:
      - "5001:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  nodus.database.migrations.grpc:
    container_name: nodus.database.migrations.grpc
    env_file: docker.env
    ports:
      - "5002:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  nodus.notificationservice:
    container_name: nodus.notificationservice
    env_file: docker.env
    ports:
      - "3003:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  
  nodus.tgbot:
    container_name: nodus.tgbot
    env_file: docker.env
    ports:
      - "4000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    